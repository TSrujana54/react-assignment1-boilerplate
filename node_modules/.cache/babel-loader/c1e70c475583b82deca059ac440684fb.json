{"ast":null,"code":"import _slicedToArray from\"/home/nht-nishchitha/DataMunger/react-assignment1-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{makeStyles}from'@material-ui/core/styles';import Grid from'@material-ui/core/Grid';import Card from'../card/Card';var useStyles=makeStyles(function(theme){return{root:{flexGrow:1,marginTop:90},paper:{height:140,width:100},control:{padding:theme.spacing(2)}};});export default function Dashboard(){var classes=useStyles();var _useState=useState({news:[]}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setstate=_useState2[1];//fetching data from newsapi.org\nuseEffect(function(){fetch('http://newsapi.org/v2/top-headlines?country=in&apiKey=08c07e0f13274b2eb61a0abd47357678').then(function(res){return res.json();}).then(function(data){return setstate({news:data.articles});});},[]);//setting the state to news\nvar news=state.news;//OnReadLater - saving data to read later\nvar OnReadLaterClick=function OnReadLaterClick(id){console.log(id);var newsToBeReadLater=news.find(function(newsCard){return newsCard.source.id===id;});console.log('news');console.log(newsToBeReadLater);fetch('http://localhost:3001/profile',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(newsToBeReadLater)}).then(function(res){return console.log(res.json());});};//mapping newscard details to dashboard\nreturn/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"column\",alignItems:\"center\",justify:\"center\",className:classes.root,\"data-testid\":\"newsGrid\"},news.map(function(newsCard){return/*#__PURE__*/React.createElement(Card,{id:newsCard.source.id,key:newsCard.source.id,onReadLaterClick:OnReadLaterClick,image:newsCard.urlToImage,title:newsCard.title,author:newsCard.author,description:newsCard.description});}));}","map":{"version":3,"sources":["/home/nht-nishchitha/DataMunger/react-assignment1-boilerplate/src/Components/dashboard/Dashboard.tsx"],"names":["React","useState","useEffect","makeStyles","Grid","Card","useStyles","theme","root","flexGrow","marginTop","paper","height","width","control","padding","spacing","Dashboard","classes","news","state","setstate","fetch","then","res","json","data","articles","OnReadLaterClick","id","console","log","newsToBeReadLater","find","newsCard","source","method","headers","body","JSON","stringify","map","urlToImage","title","author","description"],"mappings":"oLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CAEA,GAAMC,CAAAA,SAAS,CAAGH,UAAU,CAAC,SAACI,KAAD,QAAY,CACvCC,IAAI,CAAE,CACJC,QAAQ,CAAE,CADN,CAEJC,SAAS,CAAC,EAFN,CADiC,CAMvCC,KAAK,CAAE,CACLC,MAAM,CAAE,GADH,CAELC,KAAK,CAAE,GAFF,CANgC,CAUvCC,OAAO,CAAE,CACPC,OAAO,CAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CADF,CAV8B,CAAZ,EAAD,CAA5B,CAeA,cAAe,SAASC,CAAAA,SAAT,EAAqB,CAClC,GAAMC,CAAAA,OAAO,CAAGZ,SAAS,EAAzB,CADkC,cAERL,QAAQ,CAAC,CAAEkB,IAAI,CAAE,EAAR,CAAD,CAFA,wCAE3BC,KAF2B,eAEpBC,QAFoB,eAIlC;AACAnB,SAAS,CAAC,UAAI,CACZoB,KAAK,CAAC,wFAAD,CAAL,CACCC,IADD,CACM,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADT,EAECF,IAFD,CAEM,SAAAG,IAAI,QAAIL,CAAAA,QAAQ,CAAC,CAAEF,IAAI,CAAEO,IAAI,CAACC,QAAb,CAAD,CAAZ,EAFV,EAGD,CAJQ,CAIP,EAJO,CAAT,CAMA;AAXkC,GAY3BR,CAAAA,IAZ2B,CAYnBC,KAZmB,CAY3BD,IAZ2B,CAclC;AACA,GAAMS,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,EAAD,CAAY,CACnCC,OAAO,CAACC,GAAR,CAAYF,EAAZ,EACA,GAAIG,CAAAA,iBAAiB,CAAGb,IAAI,CAACc,IAAL,CAAU,SAACC,QAAD,QAAkBA,CAAAA,QAAQ,CAACC,MAAT,CAAgBN,EAAhB,GAAuBA,EAAzC,EAAV,CAAxB,CACAC,OAAO,CAACC,GAAR,CAAY,MAAZ,EACAD,OAAO,CAACC,GAAR,CAAYC,iBAAZ,EACAV,KAAK,CAAC,+BAAD,CAAiC,CACpCc,MAAM,CAAE,MAD4B,CAEpCC,OAAO,CAAE,CAAC,eAAgB,kBAAjB,CAF2B,CAGpCC,IAAI,CAACC,IAAI,CAACC,SAAL,CAAeR,iBAAf,CAH+B,CAAjC,CAAL,CAIGT,IAJH,CAIQ,SAAAC,GAAG,QAAIM,CAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACC,IAAJ,EAAZ,CAAJ,EAJX,EAKD,CAVD,CAYA;AACA,mBACE,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,QAA1B,CAAmC,UAAU,CAAC,QAA9C,CAAuD,OAAO,CAAC,QAA/D,CAAwE,SAAS,CAAEP,OAAO,CAACV,IAA3F,CAAiG,cAAY,UAA7G,EAEIW,IAAI,CAACsB,GAAL,CAAS,SAACP,QAAD,qBACT,oBAAC,IAAD,EAAM,EAAE,CAAEA,QAAQ,CAACC,MAAT,CAAgBN,EAA1B,CAA8B,GAAG,CAAEK,QAAQ,CAACC,MAAT,CAAgBN,EAAnD,CAAuD,gBAAgB,CAAID,gBAA3E,CAA6F,KAAK,CAAIM,QAAQ,CAACQ,UAA/G,CAA2H,KAAK,CAAIR,QAAQ,CAACS,KAA7I,CAAoJ,MAAM,CAAIT,QAAQ,CAACU,MAAvK,CAA+K,WAAW,CAAIV,QAAQ,CAACW,WAAvM,EADS,EAAT,CAFJ,CADF,CASD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '../card/Card';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop:90\n    \n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [state, setstate] = useState({ news: [] });\n\n  //fetching data from newsapi.org\n  useEffect(()=>{\n    fetch('http://newsapi.org/v2/top-headlines?country=in&apiKey=08c07e0f13274b2eb61a0abd47357678')\n    .then(res => res.json())\n    .then(data => setstate({ news: data.articles }));\n  },[]);\n\n  //setting the state to news\n  const {news} = state;\n\n  //OnReadLater - saving data to read later\n  const OnReadLaterClick = (id:any) => {\n    console.log(id);\n    let newsToBeReadLater = news.find((newsCard:any )=> newsCard.source.id === id);\n    console.log('news');\n    console.log(newsToBeReadLater);\n    fetch('http://localhost:3001/profile',{\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body:JSON.stringify(newsToBeReadLater)\n    }).then(res => console.log(res.json()));\n  }\n\n  //mapping newscard details to dashboard\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" className={classes.root} data-testid=\"newsGrid\">\n    {\n        news.map((newsCard: any) => \n        <Card id={newsCard.source.id} key={newsCard.source.id} onReadLaterClick = {OnReadLaterClick} image = {newsCard.urlToImage} title = {newsCard.title} author = {newsCard.author} description = {newsCard.description}/>\n        )\n    }\n    </Grid>\n  );\n}"]},"metadata":{},"sourceType":"module"}