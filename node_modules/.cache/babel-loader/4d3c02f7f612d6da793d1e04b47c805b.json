{"ast":null,"code":"var _jsxFileName = \"/home/nht-nishchitha/DataMunger/react-assignment1-boilerplate/src/Components/dashboard/Dashboard.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport GridList from '@material-ui/core/Grid';\nimport NewsCard from '../card/Card';\nimport { makeStyles } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    height: 140,\n    width: 100\n  },\n  control: {\n    padding: theme.spacing(2)\n  }\n}));\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    news: []\n  });\n  useEffect(() => {\n    fetch('http://newsapi.org/v2/top-headlines?country=in&apiKey=fc287ba1af2e4a0290253b521cc34bf4').then(res => res.json()).then(data => setState({\n      news: data.articles\n    }));\n  }, []);\n  const {\n    news\n  } = state;\n\n  const OnReadLaterClick = id => {\n    // n\n    let newsToBeReadLater = news.find(newsCard => newsCard.source.id === id);\n    fetch('http://localhost:3001/profile', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'Application/json'\n      },\n      body: JSON.stringify(newsToBeReadLater)\n    }).then(res => console.log(res.json()));\n  };\n\n  const list = news.map(item => /*#__PURE__*/React.createElement(NewsCard, {\n    id: item.source.id,\n    title: item.title,\n    img: item.urlToImage,\n    author: item.author,\n    description: item.description,\n    key: item.id,\n    ReadClick: OnReadLaterClick,\n    news: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, list));\n}","map":{"version":3,"sources":["/home/nht-nishchitha/DataMunger/react-assignment1-boilerplate/src/Components/dashboard/Dashboard.tsx"],"names":["React","useState","useEffect","GridList","NewsCard","makeStyles","useStyles","theme","root","flexGrow","paper","height","width","control","padding","spacing","Dashboard","classes","state","setState","news","fetch","then","res","json","data","articles","OnReadLaterClick","id","newsToBeReadLater","find","newsCard","source","method","headers","body","JSON","stringify","console","log","list","map","item","title","urlToImage","author","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAIA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GAD+B;AAIrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,GADH;AAELC,IAAAA,KAAK,EAAE;AAFF,GAJ8B;AAQrCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd;AADF;AAR4B,CAAZ,CAAD,CAA5B;AAcA,eAAe,SAASC,SAAT,GAAqB;AAEhC,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC;AAAEmB,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAlC;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AAEZmB,IAAAA,KAAK,CAAC,wFAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAIN,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEK,IAAI,CAACC;AAAb,KAAD,CAF1B;AAGH,GALQ,EAKN,EALM,CAAT;AAOA,QAAM;AAAEN,IAAAA;AAAF,MAAWF,KAAjB;;AAEA,QAAMS,gBAAgB,GAAIC,EAAD,IAAa;AAClC;AACA,QAAIC,iBAAiB,GAAGT,IAAI,CAACU,IAAL,CAAWC,QAAD,IAAmBA,QAAQ,CAACC,MAAT,CAAgBJ,EAAhB,KAAuBA,EAApD,CAAxB;AACAP,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACnCY,MAAAA,MAAM,EAAE,MAD2B;AAEnCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAF0B;AAGnCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,iBAAf;AAH6B,KAAlC,CAAL,CAIGP,IAJH,CAIQC,GAAG,IAAIe,OAAO,CAACC,GAAR,CAAYhB,GAAG,CAACC,IAAJ,EAAZ,CAJf;AAKH,GARD;;AAUA,QAAMgB,IAAI,GAAGpB,IAAI,CAACqB,GAAL,CAAUC,IAAD,iBAClB,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAEA,IAAI,CAACV,MAAL,CAAYJ,EAA1B;AACI,IAAA,KAAK,EAAEc,IAAI,CAACC,KADhB;AAEI,IAAA,GAAG,EAAED,IAAI,CAACE,UAFd;AAGI,IAAA,MAAM,EAAEF,IAAI,CAACG,MAHjB;AAII,IAAA,WAAW,EAAEH,IAAI,CAACI,WAJtB;AAKI,IAAA,GAAG,EAAEJ,IAAI,CAACd,EALd;AAKkB,IAAA,SAAS,EAAED,gBAL7B;AAK+C,IAAA,IAAI,EAAEe,IALrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,CAAb;AASA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IADL,CADJ,CADJ;AAQH","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport GridList from '@material-ui/core/Grid'\nimport NewsCard from '../card/Card'\nimport { makeStyles } from '@material-ui/core'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      height: 140,\n      width: 100,\n    },\n    control: {\n      padding: theme.spacing(2),\n    },\n  }));\n  \n\nexport default function Dashboard() {\n\n    const classes = useStyles();\n    const [state, setState] = useState({ news: [] })\n\n    useEffect(() => {\n\n        fetch('http://newsapi.org/v2/top-headlines?country=in&apiKey=fc287ba1af2e4a0290253b521cc34bf4')\n            .then(res => res.json())\n            .then(data => setState({ news: data.articles }));\n    }, []);\n\n    const { news } = state;\n\n    const OnReadLaterClick = (id: any) => {\n        // n\n        let newsToBeReadLater = news.find((newsCard: any) => newsCard.source.id === id);\n        fetch('http://localhost:3001/profile', {\n            method: 'POST',\n            headers: { 'Content-Type': 'Application/json' },\n            body: JSON.stringify(newsToBeReadLater)\n        }).then(res => console.log(res.json()));\n    }\n\n    const list = news.map((item: any) =>\n        <NewsCard id={item.source.id}\n            title={item.title} \n            img={item.urlToImage}\n            author={item.author}\n            description={item.description}\n            key={item.id} ReadClick={OnReadLaterClick} news={item}></NewsCard>\n    )\n\n    return (\n        <div>\n            <GridList>\n                {list}\n            </GridList>\n        </div>\n    )\n\n}\n\n"]},"metadata":{},"sourceType":"module"}